<?xml version="1.0"?>
<configuration>
  <configSections>
    <section name="nlog" type="NLog.Config.ConfigSectionHandler, NLog" />
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=4.4.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  </configSections>
  <appSettings>
    <add key="MessageQueue.Logging" value=".\private$\Seagull.Services.Logging" />
    <add key="MessageQueue.Messaging" value=".\private$\Seagull.Services.Messaging" />
    <add key="MessageQueue.Routing" value=".\private$\Seagull.Services.Messaging.Routing" />
    <add key="MessageQueue.DeadLetter" value="net.msmq://localhost/system$;DeadLetter" />
    <add key="StorageSite.ServiceAddress" value="net.tcp://localhost:5150/StorageSite" />
    <add key="MessagingService.ServiceAddress" value="net.tcp://localhost:5150/MessagingService" />
    <add key="MessagingQueueService.ServiceAddress" value="net.msmq://localhost/private/Seagull.Services.Messaging" />
    <add key="MessagingQueueService.DeadLetterServiceAddress" value="net.msmq://localhost/system$;DeadLetter" />
    <add key="ServiceSettings.DefaultPort" value="5150" />
    <add key="ServiceSettings.DefaultInstanceName" value="Service" />
    <add key="ServiceSettings.DefaultServerName" value="localhost" />
  </appSettings>
  <entityFramework>
    <!--<defaultConnectionFactory type="System.Data.Entity.Infrastructure.SqlCeConnectionFactory, EntityFramework">
      <parameters>
        <parameter value="System.Data.SqlServerCe.4.0" />
      </parameters>
    </defaultConnectionFactory>-->
  </entityFramework>  
  <system.serviceModel>
    <bindings>
      <netTcpBinding>
        <binding name="NetTcpBindingConfig"
                 closeTimeout="00:01:00"
                 openTimeout="00:01:00"
                 receiveTimeout="00:10:00"
                 sendTimeout="00:01:00"
                 transactionFlow="false"
                 transferMode="Buffered"
                 transactionProtocol="OleTransactions"
                 hostNameComparisonMode="StrongWildcard"
                 listenBacklog="10"
                 maxBufferPoolSize="6524288"
                 maxBufferSize="2147483647"
                 maxConnections="10"
                 portSharingEnabled="true"
                 maxReceivedMessageSize="2147483647">
          <readerQuotas maxDepth="32"
                  maxStringContentLength="2147483647"
                  maxArrayLength="2147483647"
                  maxBytesPerRead="4096"
                  maxNameTableCharCount="16384" />
          <reliableSession ordered="true"
                           inactivityTimeout="00:10:00"
                           enabled="false" />
          <security mode="Transport">
            <transport clientCredentialType="Windows"
                       protectionLevel="EncryptAndSign" />
            <message clientCredentialType="Windows" />
          </security>
        </binding>
      </netTcpBinding>
      <netMsmqBinding>
        <binding name="MessagingMsmqBindingConfig"
                 closeTimeout="00:01:00"
                 openTimeout="00:01:00"
                 receiveTimeout="00:00:30"
                 sendTimeout="00:01:00"
                 deadLetterQueue="System"
                 durable="true"
                 exactlyOnce="false"
                 maxReceivedMessageSize="2147483647"
                 maxRetryCycles="2"
                 receiveRetryCount="5"
                 retryCycleDelay="00:00:05"
                 receiveErrorHandling="Drop"
                 timeToLive="1.00:00:00"
                 useSourceJournal="false"
                 useMsmqTracing="false"
                 queueTransferProtocol="Native"
                 maxBufferPoolSize="6524288"
                 useActiveDirectory="false">
          <readerQuotas maxDepth="32"
                        maxStringContentLength="2147483647"
                        maxArrayLength="2147483647"
                        maxBytesPerRead="4096"
                        maxNameTableCharCount="16384" />
          <security mode="None">
            <transport msmqAuthenticationMode="WindowsDomain"
                       msmqEncryptionAlgorithm="RC4Stream"
                       msmqProtectionLevel="Sign"
                       msmqSecureHashAlgorithm="Sha1" />
            <message clientCredentialType="Windows" />
          </security>
        </binding>
      </netMsmqBinding>
    </bindings>
    <services>
      <service name="Seagull.Services.Integration.Server.Messaging.MessagingService">
        <endpoint address="net.tcp://localhost:5150/Integration/Messaging"
          binding="netTcpBinding" bindingConfiguration="NetTcpBindingConfig"
          contract="Seagull.Services.Integration.Contracts.Messaging.IMessagingService" />
      </service>
      <service name="Seagull.Services.Integration.Server.Logging.LoggingService">
        <endpoint address="net.tcp://localhost:5150/Integration/Logging"
          binding="netTcpBinding" bindingConfiguration="NetTcpBindingConfig"
          contract="Seagull.Services.Integration.Contracts.Logging.ILoggingService" />
      </service>
      <service behaviorConfiguration="ThrottlingLoggingBehavior" name="Seagull.Services.Integration.Server.Logging.LoggingQueueService">
        <endpoint address="net.msmq://localhost/private/Seagull.Services.Logging"
          binding="netMsmqBinding" bindingConfiguration="MessagingMsmqBindingConfig"
          contract="Seagull.Services.Integration.Contracts.Logging.ILoggingQueueService" />
      </service>
      <service behaviorConfiguration="ThrottlingMessagingBehavior" name="Seagull.Services.Integration.Server.Messaging.MessagingQueueService">
        <endpoint address="net.msmq://localhost/private/Seagull.Services.Messaging"
          binding="netMsmqBinding" bindingConfiguration="MessagingMsmqBindingConfig"
          contract="Seagull.Services.Integration.Contracts.Messaging.IMessagingQueueService" />
      </service>
      <service behaviorConfiguration="ThrottlingDeadLetterBehavior" name="Seagull.Services.Integration.Server.Messaging.MessagingQueueDeadLetterService">
        <endpoint address="net.msmq://localhost/system$;DeadLetter"
          binding="netMsmqBinding" bindingConfiguration="MessagingMsmqBindingConfig"
          contract="Seagull.Services.Integration.Contracts.Messaging.IMessagingQueueService" />
      </service>
      <service behaviorConfiguration="RoutingBehavior" name="System.ServiceModel.Routing.RoutingService">
        <endpoint address="net.msmq://localhost/private/Seagull.Services.Messaging.Routing"
          binding="netMsmqBinding" bindingConfiguration="MessagingMsmqBindingConfig"
          name="RouterInputEndpoint" contract="System.ServiceModel.Routing.ISimplexDatagramRouter" />
      </service>
      <service name="Seagull.Services.StorageSite.Server.CloudAccountStorageService">
        <endpoint address="net.tcp://localhost:5150/StorageSite"
          binding="netTcpBinding" bindingConfiguration="NetTcpBindingConfig"
          contract="Seagull.Services.StorageSite.Contracts.ICloudAccountStorageService" />
      </service>
    </services>
    <client>
      <endpoint name="MessagingClientBinding" binding="netTcpBinding" bindingConfiguration="NetTcpBindingConfig" contract="Seagull.Services.Integration.Contracts.Messaging.IMessagingClientService" />
      <endpoint name="MessagingRoutingServiceBinding" address="net.msmq://localhost/private/Seagull.Services.Messaging.Routing" binding="netMsmqBinding" bindingConfiguration="MessagingMsmqBindingConfig" contract="Seagull.Services.Integration.Contracts.Messaging.IMessagingQueueService" />
      <endpoint name="MessagingServiceBinding" address="net.msmq://localhost/private/Seagull.Services.Messaging" binding="netMsmqBinding" bindingConfiguration="MessagingMsmqBindingConfig" contract="Seagull.Services.Integration.Contracts.Messaging.IMessagingQueueService" />
      <endpoint name="RoutedLogging" address="net.msmq://localhost/private/Seagull.Services.Logging" binding="netMsmqBinding" bindingConfiguration="MessagingMsmqBindingConfig" contract="*" />
      <endpoint name="RoutedMessaging" address="net.msmq://localhost/private/Seagull.Services.Messaging" binding="netMsmqBinding" bindingConfiguration="MessagingMsmqBindingConfig" contract="*" />
    </client>
    <routing>
      <filters>
        <filter name="MatchAllFilter" filterType="MatchAll" />
      </filters>
      <filterTables>
        <filterTable name="RoutingTable">
          <add filterName="MatchAllFilter" endpointName="RoutedLogging" />
          <add filterName="MatchAllFilter" endpointName="RoutedMessaging" />
        </filterTable>
      </filterTables>
    </routing>
    <behaviors>
      <serviceBehaviors>
        <behavior name="">
          <serviceMetadata httpGetEnabled="false" />
          <serviceDebug includeExceptionDetailInFaults="true" />
          <ErrorHandler />
        </behavior>
        <behavior name="RoutingBehavior">
          <routing filterTableName="RoutingTable" />
          <ErrorHandler />
        </behavior>
        <behavior name="ThrottlingBehavior">
          <serviceThrottling maxConcurrentCalls="1" />
          <!--Note: The transactionTimeout must be longer then the service receiveTimeout. If not a transaction out of order error may occur.-->
          <serviceTimeouts transactionTimeout="00:01:00" />
          <ErrorHandler />
        </behavior>
        <behavior name="ThrottlingDeadLetterBehavior">
          <serviceThrottling maxConcurrentCalls="1" />
          <!--Note: The transactionTimeout must be longer then the service receiveTimeout. If not a transaction out of order error may occur.-->
          <serviceTimeouts transactionTimeout="00:01:00" />
          <ErrorHandler />
        </behavior>
        <behavior name="ThrottlingLoggingBehavior">
          <serviceThrottling maxConcurrentCalls="1" />
          <!--Note: The transactionTimeout must be longer then the service receiveTimeout. If not a transaction out of order error may occur.-->
          <serviceTimeouts transactionTimeout="00:01:00" />
          <ErrorHandler />
        </behavior>
        <behavior name="ThrottlingMessagingBehavior">
          <serviceThrottling maxConcurrentCalls="5" />
          <!--Note: The transactionTimeout must be longer then the service receiveTimeout. If not a transaction out of order error may occur.-->
          <serviceTimeouts transactionTimeout="00:01:00" />
          <ErrorHandler />
        </behavior>
        <!--<behavior name="ObjectGraph">
          <dataContractSerializer maxItemsInObjectGraph="6553600" />
        </behavior>-->
      </serviceBehaviors>
      <endpointBehaviors>
        <behavior name="BatchingBehavior">
          <transactedBatching maxBatchSize="10" />
        </behavior>
        <behavior name="RestEndpointBehavior">
          <webHttp helpEnabled="true" />
        </behavior>
      </endpointBehaviors>
    </behaviors>
    <extensions>
      <behaviorExtensions>
        <add name="ErrorHandler" type="Seagull.Framework.Services.ServiceErrorHandlerElement, Seagull.Framework" />
      </behaviorExtensions>
    </extensions>
  </system.serviceModel>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.0"/>
  </startup>
  <!-- Log Configuration -->
  <!--internalLogFile="c:\Nlog.txt" internalLogLevel="Trace"-->
  <nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <targets>
      <!--Configure File Log Targets-->
      <target name="All" xsi:type="AsyncWrapper">
        <target name="logfile" xsi:type="File"
           fileName="${specialfolder:folder=CommonApplicationData}\Seagull\Services\Logging\System.Service.txt"
           layout="${date:format=yyyy.MM.dd.HHmmss}: ${pad:padding=7:inner=${level}}: ${message}: ${pad:padding=75:inner=${logger}}"
           archiveFileName="${specialfolder:folder=CommonApplicationData}\Seagull\Services\Logging\Archive\System.Service.{#}.txt"
           archiveEvery="Day"
           archiveNumbering="Rolling"
           maxArchiveFiles="7"
        />
      </target>
      <!--Configure Colored Console Targets-->
      <target name="Console" xsi:type="ColoredConsole" useDefaultRowHighlightingRules="false" layout="${pad:padding=7:inner=${level}}: ${message}">
        <highlight-row condition="level == LogLevel.Debug" foregroundColor="DarkGray" />
        <highlight-row condition="level == LogLevel.Trace" foregroundColor="Gray" />
        <highlight-row condition="level == LogLevel.Info" foregroundColor="White" />
        <highlight-row condition="level == LogLevel.Warn" foregroundColor="Yellow" />
        <highlight-row condition="level == LogLevel.Error" foregroundColor="Red" />
        <highlight-row condition="level == LogLevel.Fatal" foregroundColor="Red" backgroundColor="White" />
      </target>
    </targets>
    <!--Configure logger rules.-->
    <rules>
      <!--<logger name="*" minlevel="Info" writeTo="All" />-->
      <logger name="*" minlevel="Info" writeTo="All" />
      <logger name="*" minlevel="Info" writeTo="Console" />
    </rules>
  </nlog>
  <!--<system.diagnostics>
      <sources>
         <source name="System.ServiceModel"
                 switchValue="Information, ActivityTracing"
                 propagateActivity="true">
            <listeners>
               <add name="traceListener"
                   type="System.Diagnostics.XmlWriterTraceListener"
                   initializeData= "c:\temp\TracesServer.srvlog" />
            </listeners>
         </source>
      </sources>
   </system.diagnostics>-->
  <runtime>
    <generatePublisherEvidence enabled="false"/>
    <gcServer enabled="true"/>
  </runtime>
</configuration>
